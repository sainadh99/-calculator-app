name: CI/CD Pipeline  # The name of the workflow

# Trigger conditions
on:
  pull_request:
    types: [opened, synchronize, closed]  # Trigger workflow when a PR is opened, updated, or closed
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  ci-deploy:
    runs-on: ubuntu-latest  # Use GitHub's Ubuntu runner to execute jobs
    
    # Conditional execution:
    # - CI checks run for opened or updated PRs
    # - Deployment only happens if PR is merged by 'sainadh99'
    # - Manual workflow runs are allowed
    if: |
      (
        github.event_name == 'pull_request' &&
        (github.event.action == 'opened' || github.event.action == 'synchronize')
      ) ||
      (
        github.event_name == 'pull_request' &&
        github.event.action == 'closed' &&
        github.event.pull_request.merged == true &&
        github.event.pull_request.merged_by.login == 'sainadh99'
      ) ||
      github.event_name == 'workflow_dispatch'

    steps:
      # Step 0: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: Run CI checks for opened or updated PRs
      - name: PR CI Check
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        run: |
          echo "üîπ PR #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"
          echo "üîç Running CI checks..."
          echo "   - Checking code syntax"
          echo "   - Running linting (if configured)"
          echo "   - Running tests (if configured)"
          echo "‚úÖ CI checks completed successfully"
          echo "‚ÑπÔ∏è Deployment will only occur when merged by 'sainadh99'"

      # Steps 2-10 run only if PR is merged by 'sainadh99'
      # Step 2: Generate build number and metadata
      - name: Generate Build Number & Metadata
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        id: build_number
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          BUILD_TAG="build-${BUILD_NUMBER}"
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "üéØ Deployment authorized - PR merged by sainadh99"
          echo "üî¢ Build Number: $BUILD_NUMBER"
          echo "üè∑Ô∏è Build Tag: $BUILD_TAG"
          echo "üìÖ Build Date: $BUILD_DATE"
          echo "üë§ Merged by: ${{ github.event.pull_request.merged_by.login }}"
          echo "üîó PR: #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"

      # Step 3: Setup Docker Buildx
      - name: Set up Docker Buildx
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        uses: docker/setup-buildx-action@v3

      # Step 4: DockerHub Login
      - name: Docker Login
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Build & Push Docker Image
      - name: Build & Push Docker Image
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            sainadh99/calculator-app:latest
            sainadh99/calculator-app:${{ env.BUILD_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_NUMBER=${{ env.BUILD_NUMBER }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            GIT_COMMIT=${{ github.sha }}

      # Step 6: Verify required secrets
      - name: Verify Required Secrets
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        run: |
          echo "‚úÖ Checking required secrets..."
          echo "GCP_VM_HOST: ${{ secrets.GCP_VM_HOST != '' && 'SET' || 'MISSING' }}"
          echo "GCP_VM_USERNAME: ${{ secrets.GCP_VM_USERNAME != '' && 'SET' || 'MISSING' }}"
          echo "GCP_VM_KEY: ${{ secrets.GCP_VM_KEY != '' && 'SET' || 'MISSING' }}"
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME != '' && 'SET' || 'MISSING' }}"
          echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN != '' && 'SET' || 'MISSING' }}"

      # Step 7: Setup Docker on GCP VM
      - name: Setup Docker on GCP VM
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 300s
          command_timeout: 10m
          script: |
            echo "=== Checking Docker installation ==="
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER || true
            else
              echo "Docker already installed"
              sudo systemctl start docker || true
            fi
            docker --version || echo "‚ö†Ô∏è Docker command not available"

      # Step 8: Deploy Docker container
      - name: Deploy to GCP VM
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 15m
          script: |
            echo "üì¶ Pulling Docker image..."
            sudo docker pull sainadh99/calculator-app:${{ env.BUILD_TAG }}
            sudo docker stop calculator-app || true
            sudo docker rm calculator-app || true
            sudo docker run -d \
              --name calculator-app \
              --restart unless-stopped \
              -p 80:3000 \
              --memory=512m \
              --cpus=1.0 \
              --read-only \
              --tmpfs /usr/src/app/tmp:rw,noexec,nosuid,size=100m \
              --tmpfs /usr/src/app/data:rw,noexec,nosuid,size=100m \
              --tmpfs /tmp:rw,noexec,nosuid,size=50m \
              --security-opt no-new-privileges:true \
              --cap-drop ALL \
              --cap-add CHOWN \
              --cap-add SETGID \
              --cap-add SETUID \
              --cap-add NET_BIND_SERVICE \
              --user 1001:1001 \
              sainadh99/calculator-app:${{ env.BUILD_TAG }}

      # Step 9: Health Check
      - name: Health Check
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        run: |
          echo "‚è≥ Waiting for app to be ready..."
          sleep 30
          if curl -fs "http://${{ secrets.GCP_VM_HOST }}" >/dev/null; then
            echo "‚úÖ App is running!"
          else
            echo "‚ö†Ô∏è App not responding. Check logs on VM."

      # Step 10: Container Maintenance (cleanup)
      - name: Container Maintenance
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 60s
          script: |
            # Determine Docker command
            if docker info >/dev/null 2>&1; then
              DOCKER_CMD="docker"
            elif sudo docker info >/dev/null 2>&1; then
              DOCKER_CMD="sudo docker"
            else
              exit 0
            fi

            echo "üßπ Performing maintenance..."
            eval "$DOCKER_CMD system prune -f" || true

            echo "üì¶ Current calculator-app images:"
            eval "$DOCKER_CMD images sainadh99/calculator-app --format 'table {{.Repository}}\t{{.Tag}}\t{{.ID}}\t{{.CreatedAt}}\t{{.Size}}'"

            echo "üèÉ Running containers:"
            eval "$DOCKER_CMD ps --filter name=calculator-app --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'"

      # Step 11: Deployment Success Notification
      - name: Deployment Success Notification
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login == 'sainadh99'
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üìä Summary:"
          echo "  ‚Ä¢ Build Number: #${{ env.BUILD_NUMBER }}"
          echo "  ‚Ä¢ Build Tag: ${{ env.BUILD_TAG }}"
          echo "  ‚Ä¢ Docker Image: sainadh99/calculator-app:${{ env.BUILD_TAG }}"
          echo "  ‚Ä¢ Merged by: ${{ github.event.pull_request.merged_by.login }}"
          echo "  ‚Ä¢ PR: #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"
          echo "  ‚Ä¢ Commit: ${{ github.sha }}"
          echo "  ‚Ä¢ App URL: http://${{ secrets.GCP_VM_HOST }}"
          echo "  ‚Ä¢ Security: Enhanced with restricted capabilities and read-only filesystem"

      # Step 12: Deployment skipped for PRs merged by others
      - name: Deployment Skipped
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          github.event.pull_request.merged_by.login != 'sainadh99'
        run: |
          echo "‚ö†Ô∏è Deployment skipped!"
          echo "üìã Details:"
          echo "  ‚Ä¢ PR: #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"
          echo "  ‚Ä¢ Merged by: ${{ github.event.pull_request.merged_by.login }}"
          echo "  ‚Ä¢ Reason: Only PRs merged by 'sainadh99' trigger deployment"
          echo "‚ÑπÔ∏è To deploy this change, ask sainadh99 to merge a new PR or manually trigger deployment."
