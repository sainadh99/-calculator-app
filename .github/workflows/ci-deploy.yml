name: CI/CD Pipeline

on:
  push:
    branches:
      - master           # Run when code is pushed directly to master
  pull_request:
    types: [closed]      # Run when a PR is closed (merged or not)
  workflow_dispatch:      # Allow manual run from GitHub Actions tab

jobs:
  build-and-deploy:
    if: |
      github.event_name == 'push' ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.merged == true &&
        github.base_ref == 'master' &&
        github.event.pull_request.user.login == 'sainadh45372' &&
        github.actor == 'sainadh99'
      )
    runs-on: ubuntu-latest

    steps:
      # Step 1: Get the code from GitHub
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Prepare Docker for building images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Login to DockerHub using secrets
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build and push Docker image with build number
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            sainadh99/calculator-app:latest
            sainadh99/calculator-app:build-${{ github.run_number }}
      - name: Show Build Info
        run: echo "‚úÖ Built and pushed Docker image: sainadh99/calculator-app:build-${{ github.run_number }}"

      # Step 5: Connect to Azure VM and install Docker (if not installed)
      - name: Setup Docker on Azure VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "${{ secrets.AZURE_VM_PASSWORD }}" | sudo -S apt update
              echo "${{ secrets.AZURE_VM_PASSWORD }}" | sudo -S apt install -y docker.io
              echo "${{ secrets.AZURE_VM_PASSWORD }}" | sudo -S systemctl start docker
              echo "${{ secrets.AZURE_VM_PASSWORD }}" | sudo -S systemctl enable docker
            fi
            docker --version

      # Step 6: Deploy the container on Azure VM
      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          script: |
            echo "üöÄ Deploying Build #${{ github.run_number }} on Azure VM"
            docker pull sainadh99/calculator-app:build-${{ github.run_number }}

            echo "Stopping old container (if any)..."
            docker stop calculator-app || true
            docker rm calculator-app || true

            echo "Running new container..."
            docker run -d --name calculator-app --restart unless-stopped -p 80:80 sainadh99/calculator-app:build-${{ github.run_number }}

      # Step 7: Quick health check
      - name: Health Check
        run: |
          echo "üîç Checking if Build #${{ github.run_number }} is running..."
          sleep 10
          curl -f http://${{ secrets.AZURE_VM_HOST }} || echo "‚ö†Ô∏è Build #${{ github.run_number }} might be up, but health check failed. Check manually."

      # Step 8: Final message in logs
      - name: Deployment Success
        run: |
          echo "üéâ Deployment of Build #${{ github.run_number }} completed!"
          echo "Application is available at: http://${{ secrets.AZURE_VM_HOST }}"
