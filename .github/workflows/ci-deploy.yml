name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, closed]
  workflow_dispatch:

jobs:
  ci-deploy:
    runs-on: ubuntu-latest
    if: |
      # CI for opened/synchronized PRs
      (github.event_name == 'pull_request' &&
       (github.event.action == 'opened' || github.event.action == 'synchronize')) ||
      # Build & deploy only if PR merged by sainadh99
      (github.event_name == 'pull_request' &&
       github.event.action == 'closed' &&
       github.event.pull_request.merged == true &&
       github.actor == 'sainadh99')

    steps:
      # Step 0: Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: CI check for opened PR
      - name: PR CI Check
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        run: |
          echo "🔹 PR #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"
          echo "Running CI checks (lint/tests) here..."
          # Add your test/lint commands if needed
          echo "✅ CI check complete"

      # Step 2: Build & deploy (only merged by sainadh99)
      - name: Generate Build Number & Metadata
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        id: build_number
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          BUILD_TAG="build-${BUILD_NUMBER}"
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "🔢 Build Number: $BUILD_NUMBER"
          echo "🏷️ Build Tag: $BUILD_TAG"
          echo "📅 Build Date: $BUILD_DATE"

      - name: Set up Docker Buildx
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        uses: docker/setup-buildx-action@v3

      - name: Docker Login
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            sainadh99/calculator-app:latest
            sainadh99/calculator-app:${{ env.BUILD_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_NUMBER=${{ env.BUILD_NUMBER }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            GIT_COMMIT=${{ github.sha }}

      - name: Verify Required Secrets
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        run: |
          echo "✅ Checking required secrets..."
          echo "GCP_VM_HOST: ${{ secrets.GCP_VM_HOST != '' && 'SET' || 'MISSING' }}"
          echo "GCP_VM_USERNAME: ${{ secrets.GCP_VM_USERNAME != '' && 'SET' || 'MISSING' }}"
          echo "GCP_VM_KEY: ${{ secrets.GCP_VM_KEY != '' && 'SET' || 'MISSING' }}"
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME != '' && 'SET' || 'MISSING' }}"
          echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN != '' && 'SET' || 'MISSING' }}"
          echo ""
          echo "🔢 Build Number: ${{ env.BUILD_NUMBER }}"
          echo "🏷️ Build Tag: ${{ env.BUILD_TAG }}"
          echo "📅 Build Date: ${{ env.BUILD_DATE }}"
          echo "🔄 Trigger: ${{ github.event_name }}"
          echo "👤 Actor: ${{ github.actor }}"

      - name: Setup Docker on GCP VM
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 300s
          command_timeout: 10m
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER || true
            else
              echo "Docker already installed"
              sudo systemctl start docker || true
            fi
            docker --version || echo "⚠️ Docker command not available"

      - name: Deploy to GCP VM
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 15m
          script: |
            echo "📦 Pulling image: sainadh99/calculator-app:${{ env.BUILD_TAG }}"
            sudo docker pull sainadh99/calculator-app:${{ env.BUILD_TAG }}
            sudo docker stop calculator-app || true
            sudo docker rm calculator-app || true
            # Clean older images, keep recent 3
            sudo docker images sainadh99/calculator-app --format '{{.Tag}} {{.ID}} {{.CreatedAt}}' | grep 'build-' | sort -r -k3,3 | awk 'NR>3 {print $2}' | xargs -r sudo docker rmi || true
            echo "🚀 Starting container..."
            sudo docker run -d \
              --name calculator-app \
              --restart unless-stopped \
              -p 80:3000 \
              --memory=512m \
              --cpus=1.0 \
              --read-only \
              --tmpfs /usr/src/app/tmp:rw,noexec,nosuid,size=100m \
              --tmpfs /usr/src/app/data:rw,noexec,nosuid,size=100m \
              --tmpfs /tmp:rw,noexec,nosuid,size=50m \
              --security-opt no-new-privileges:true \
              --cap-drop ALL \
              --cap-add CHOWN \
              --cap-add SETGID \
              --cap-add SETUID \
              --cap-add NET_BIND_SERVICE \
              --user 1001:1001 \
              sainadh99/calculator-app:${{ env.BUILD_TAG }}

      - name: Health Check
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        run: |
          echo "⏳ Waiting for app to be ready..."
          sleep 30
          for i in {1..5}; do
            echo "🔍 Health check attempt $i/5"
            if curl -fs "http://${{ secrets.GCP_VM_HOST }}" >/dev/null; then
              echo "✅ App is running"
              break
            fi
            [ $i -lt 5 ] && sleep 10
          done

      - name: Container Maintenance
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 60s
          script: |
            sudo docker system prune -f
            sudo docker images sainadh99/calculator-app --format 'table {{.Repository}}\t{{.Tag}}\t{{.ID}}\t{{.CreatedAt}}\t{{.Size}}'
            sudo docker ps --filter name=calculator-app --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'

      - name: Deployment Success Notification
        if: github.event.pull_request.merged == true && github.actor == 'sainadh99'
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "• Build #${{ env.BUILD_NUMBER }}"
          echo "• Build Tag: ${{ env.BUILD_TAG }}"
          echo "• Actor: ${{ github.actor }}"
          echo "• App URL: http://${{ secrets.GCP_VM_HOST }}"
          echo "• PR #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"
