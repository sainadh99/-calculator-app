name: CI/CD Pipeline

on:
  push:
    branches:
      - master   # Trigger pipeline only on push to master
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # Step 0: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Step 1: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Step 2: Login to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Step 3: Build & push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sainadh99/calculator-app:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      # Step 4: Verify secrets (debug step)
      - name: Verify Configuration
        run: |
          echo "✅ Checking required secrets..."
          echo "AZURE_VM_HOST: ${{ secrets.AZURE_VM_HOST != '' && 'SET' || 'MISSING' }}"
          echo "AZURE_VM_USERNAME: ${{ secrets.AZURE_VM_USERNAME != '' && 'SET' || 'MISSING' }}"
          echo "AZURE_VM_KEY: ${{ secrets.AZURE_VM_KEY != '' && 'SET' || 'MISSING' }}"
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME != '' && 'SET' || 'MISSING' }}"
          echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN != '' && 'SET' || 'MISSING' }}"
          
      # Step 5: Deploy to Azure VM via SSH
      - name: Deploy to Azure VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.AZURE_VM_HOST }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 15m
          script: |
            echo "=== Starting deployment ==="
            
            # Check if Docker is running
            if ! docker info >/dev/null 2>&1; then
                echo "Docker is not running. Starting Docker..."
                sudo systemctl start docker
                sleep 5
            fi
            
            echo "=== Pulling latest Docker image ==="
            docker pull sainadh99/calculator-app:latest || {
                echo "Failed to pull image"
                exit 1
            }
            
            echo "=== Stopping old container if exists ==="
            docker stop calculator-app 2>/dev/null || echo "No running container found"
            docker rm calculator-app 2>/dev/null || echo "No container to remove"
            
            echo "=== Cleaning up unused images ==="
            docker image prune -f
            
            echo "=== Running new container ==="
            docker run -d \
              --name calculator-app \
              --restart unless-stopped \
              -p 80:80 \
              sainadh99/calculator-app:latest || {
                echo "Failed to start container"
                exit 1
            }
            
            echo "=== Verifying deployment ==="
            sleep 5
            if docker ps | grep calculator-app; then
                echo "✅ Deployment successful!"
                echo "Container is running on port 80"
            else
                echo "❌ Deployment failed!"
                docker logs calculator-app
                exit 1
            fi
            
            echo "=== Deployment completed ==="

      # Step 6: Health check (optional)
      - name: Health Check
        run: |
          echo "Waiting for application to be ready..."
          sleep 10
          
          # Replace with your actual VM IP or domain
          HEALTH_URL="http://${{ secrets.AZURE_VM_HOST }}"
          
          for i in {1..5}; do
            if curl -f -s "$HEALTH_URL" >/dev/null; then
              echo "✅ Health check passed!"
              exit 0
            else
              echo "⏳ Attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
          done
          
          echo "❌ Health check failed after 5 attempts"
          exit 1
