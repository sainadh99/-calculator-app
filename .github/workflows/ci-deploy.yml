name: CI/CD Pipeline  # Workflow name

# Trigger conditions
on:
  push:
    branches:
      - master  # Trigger on direct push to master
  pull_request:
    types: [opened, synchronize, closed]  # Trigger workflow when a PR is opened, updated, or closed
  workflow_dispatch:  # Allow manual triggering

jobs:
  ci-deploy:
    runs-on: ubuntu-latest  # GitHub runner

    # Conditional execution:
    # - CI checks run for PRs (opened/synchronize)
    # - Deployment happens for merged PR by 'sainadh99'
    # - Deployment happens for direct push to master
    # - Manual workflow runs are allowed
    if: |
      (
        github.event_name == 'pull_request' &&
        (github.event.action == 'opened' || github.event.action == 'synchronize')
      ) ||
      (
        github.event_name == 'pull_request' &&
        github.event.action == 'closed' &&
        github.event.pull_request.merged == true &&
        github.event.pull_request.merged_by.login == 'sainadh99'
      ) ||
      (
        github.event_name == 'push' &&
        github.ref == 'refs/heads/master'
      ) ||
      github.event_name == 'workflow_dispatch'

    steps:
      # Step 0: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 1: PR CI Check
      - name: PR CI Check
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
        run: |
          echo "🔹 PR #${{ github.event.pull_request.number }} by ${{ github.event.pull_request.user.login }}"
          echo "🔍 Running CI checks..."
          echo "   - Checking code syntax"
          echo "   - Running linting (if configured)"
          echo "   - Running tests (if configured)"
          echo "✅ CI checks completed successfully"
          echo "ℹ️ Deployment will occur only when merged by 'sainadh99' or on direct push to master"

      # Step 2: Generate build number & metadata
      - name: Generate Build Number & Metadata
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        id: build_number
        run: |
          BUILD_NUMBER=${{ github.run_number }}
          BUILD_TAG="build-${BUILD_NUMBER}"
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "BUILD_TAG=$BUILD_TAG" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "🎯 Deployment authorized"
          echo "🔢 Build Number: $BUILD_NUMBER"
          echo "🏷️ Build Tag: $BUILD_TAG"
          echo "📅 Build Date: $BUILD_DATE"

      # Step 3: Setup Docker Buildx
      - name: Set up Docker Buildx
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        uses: docker/setup-buildx-action@v3

      # Step 4: Docker login
      - name: Docker Login
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Build & Push Docker Image
      - name: Build & Push Docker Image
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            sainadh99/calculator-app:latest
            sainadh99/calculator-app:${{ env.BUILD_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_NUMBER=${{ env.BUILD_NUMBER }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            GIT_COMMIT=${{ github.sha }}

      # Step 6: Deploy to GCP VM
      - name: Deploy to GCP VM
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USERNAME }}
          key: ${{ secrets.GCP_VM_KEY }}
          port: 22
          timeout: 300s
          command_timeout: 15m
          script: |
            echo "🚀 Pulling Docker image and deploying..."
            sudo docker pull sainadh99/calculator-app:${{ env.BUILD_TAG }}
            sudo docker stop calculator-app || true
            sudo docker rm calculator-app || true
            sudo docker run -d --name calculator-app -p 80:3000 --restart unless-stopped \
              --memory=512m --cpus=1.0 --read-only \
              --tmpfs /usr/src/app/tmp:rw,noexec,nosuid,size=100m \
              --tmpfs /usr/src/app/data:rw,noexec,nosuid,size=100m \
              --tmpfs /tmp:rw,noexec,nosuid,size=50m \
              --security-opt no-new-privileges:true \
              --cap-drop ALL --cap-add CHOWN --cap-add SETGID --cap-add SETUID --cap-add NET_BIND_SERVICE \
              --user 1001:1001 \
              sainadh99/calculator-app:${{ env.BUILD_TAG }}

      # Step 7: Health Check
      - name: Health Check
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        run: |
          echo "⏳ Waiting for app to be ready..."
          sleep 20
          if curl -fs "http://${{ secrets.GCP_VM_HOST }}" >/dev/null; then
            echo "✅ App is running!"
          else
            echo "⚠️ App not responding, check VM logs"

      # Step 8: Deployment Success Notification
      - name: Deployment Success Notification
        if: |
          (
            github.event_name == 'pull_request' &&
            github.event.action == 'closed' &&
            github.event.pull_request.merged == true &&
            github.event.pull_request.merged_by.login == 'sainadh99'
          ) || (
            github.event_name == 'push' &&
            github.ref == 'refs/heads/master'
          )
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "📊 Build: #${{ env.BUILD_NUMBER }}, Tag: ${{ env.BUILD_TAG }}"
          echo "🌐 App URL: http://${{ secrets.GCP_VM_HOST }}"
